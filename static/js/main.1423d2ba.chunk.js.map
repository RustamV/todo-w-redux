{"version":3,"sources":["components/TodoItem/index.module.scss","store/todo.js","store/selectors.js","components/App/index.jsx","components/TodoItem/index.jsx","components/EditForm/index.jsx","store/index.js","index.js","components/App/index.module.scss","components/EditForm/index.module.scss"],"names":["module","exports","formatDate","date","dd","getDate","mm","getMonth","getFullYear","todoSlice","createSlice","name","initialState","todoList","id","status","reducers","addTodo","state","payload","newTodo","Date","now","push","deleteTodo","filter","item","editTodo","map","editStatus","statuses","actions","selectTodoList","todo","App","dispatch","useDispatch","useSelector","useState","inputValue","setInputValue","hasError","setHasError","className","styles","form","value","onChange","target","length","placeholder","classNames","input","onClick","button","error","active","list","todoStatuses","TodoItem","isTodoEditing","setIsTodoEditing","todoClassnames","useMemo","todoItem","done","inProgress","failed","statusButtons","statusObjects","title","statusId","closeEditForm","top","settings","edit","delete","bottom","progress","EditForm","buttons","maxInputLength","disabled","store","configureStore","reducer","todoReducer","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1423d2ba.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoItem\":\"TodoItem_todoItem__fbfxK\",\"done\":\"TodoItem_done__18N2m\",\"inProgress\":\"TodoItem_inProgress__duUZy\",\"failed\":\"TodoItem_failed__3HXoX\",\"date\":\"TodoItem_date__1ZP1L\",\"top\":\"TodoItem_top__2Qp6M\",\"bottom\":\"TodoItem_bottom__2Lo4Q\",\"button\":\"TodoItem_button__3lxQt\",\"active\":\"TodoItem_active__1fOfo\",\"edit\":\"TodoItem_edit__3Fh9U\",\"delete\":\"TodoItem_delete__19zUY\"};","import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    todoList: [\r\n        { id: 2633279846328, date: \"12.05.2020\", name: \"Learn React\", status: \"\" },\r\n        { id: 4368745439845, date: \"14.05.2020\", name: \"Learn Redux\", status: \"in progress\" },\r\n        { id: 1673467467461, date: \"16.05.2020\", name: \"Find a job\", status: \"failed\" },\r\n        { id: 2631279826328, date: \"17.05.2020\", name: \"Tell Cassius it's over\", status: \"done\" },\r\n        { id: 4363745422845, date: \"18.05.2020\", name: \"Write a Todo App\", status: \"in progress\" },\r\n        { id: 2133379846328, date: \"20.05.2020\", name: \"Wait and Bleed\", status: \"\" },\r\n        { id: 4368745314845, date: \"22.05.2020\", name: \"Make a sandwich\", status: \"in progress\" }\r\n    ]\r\n};\r\n\r\nconst formatDate = (date) => {\r\n    let dd = date.getDate();\r\n    let mm = date.getMonth() + 1;\r\n    let yy = date.getFullYear();\r\n\r\n    if (dd < 10) dd = \"0\" + dd;\r\n    if (mm < 10) mm = \"0\" + mm;\r\n    return dd + \".\" + mm + \".\" + yy;\r\n};\r\n\r\nexport const todoSlice = createSlice({\r\n    name: \"todo\",\r\n    initialState,\r\n    reducers: {\r\n        addTodo: (state, { payload }) => {\r\n            const newTodo = { id: Date.now(), date: formatDate(new Date(Date.now())), name: payload, status: \"\" };\r\n            state.todoList.push(newTodo);\r\n        },\r\n        deleteTodo: (state, { payload }) => {\r\n            state.todoList = state.todoList.filter((item) => {\r\n                return item.id !== payload;\r\n            });\r\n        },\r\n        editTodo: (state, { payload }) => {\r\n            state.todoList = state.todoList.map((item) => {\r\n                if (item.id === payload.id) item.name = payload.name;\r\n                return item;\r\n            });\r\n        },\r\n        editStatus: (state, { payload }) => {\r\n            const statuses = [\"done\", \"in progress\", \"failed\", \"\"];\r\n            state.todoList = state.todoList.map((item) => {\r\n                if (item.id === payload.id)\r\n                    if (item.status === statuses[payload.status]) item.status = \"\";\r\n                    else item.status = statuses[payload.status];\r\n                return item;\r\n            });\r\n        }\r\n    }\r\n});\r\n\r\nexport const { addTodo, deleteTodo, editTodo, editStatus } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;\r\n","export const selectTodoList = (state) => state.todo.todoList;\r\n","import { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { addTodo } from \"../../store/todo\";\r\nimport { selectTodoList } from \"../../store/selectors\";\r\nimport { TodoItem } from \"..\";\r\nimport styles from \"./index.module.scss\";\r\nimport classNames from \"classnames\";\r\n\r\nconst App = () => {\r\n    const dispatch = useDispatch();\r\n    const todoList = useSelector(selectTodoList);\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    const handleAddClick = () => {\r\n        if (!hasError) {\r\n            dispatch(addTodo(inputValue));\r\n            setInputValue(\"\");\r\n        }\r\n    };\r\n\r\n    const handleInputChange = ({ target: { value } }) => {\r\n        setHasError(value.length === 0 ? true : false);\r\n        setInputValue(value);\r\n    };\r\n\r\n    return (\r\n        <div className={styles.todo}>\r\n            <div className={styles.form}>\r\n                <input\r\n                    value={inputValue}\r\n                    onChange={handleInputChange}\r\n                    placeholder=\"Type a todo...\"\r\n                    className={classNames(styles.input, {\r\n                        [styles.hasError]: hasError\r\n                    })}\r\n                />\r\n                <button onClick={handleAddClick} className={styles.button}>\r\n                    Add Todo\r\n                </button>\r\n                <p\r\n                    className={classNames(styles.error, {\r\n                        [styles.active]: hasError\r\n                    })}>\r\n                    Length of todo must be less than 15 symbols\r\n                </p>\r\n            </div>\r\n            <div className={styles.list}>\r\n                {todoList.map((todo) => {\r\n                    return <TodoItem key={todo.id} todo={todo} />;\r\n                })}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import { useState, useMemo } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { EditForm } from \"..\";\r\nimport { deleteTodo, editStatus } from \"../../store/todo\";\r\nimport classNames from \"classnames\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst todoStatuses = [\"done\", \"in progress\", \"failed\"];\r\n\r\nconst TodoItem = ({ todo }) => {\r\n    const dispatch = useDispatch();\r\n    const { name, date, id, status } = todo;\r\n    const [isTodoEditing, setIsTodoEditing] = useState(false);\r\n\r\n    const todoClassnames = useMemo(\r\n        () =>\r\n            classNames(styles.todoItem, {\r\n                [styles.done]: status === todoStatuses[0],\r\n                [styles.inProgress]: status === todoStatuses[1],\r\n                [styles.failed]: status === todoStatuses[2]\r\n            }),\r\n        [status]\r\n    );\r\n\r\n    const statusButtons = useMemo(() => {\r\n        const statusObjects = [\r\n            { id: 0, title: \"Done\", className: styles.done },\r\n            { id: 1, title: \"In progress\", className: styles.inProgress },\r\n            { id: 2, title: \"Failed\", className: styles.failed }\r\n        ];\r\n\r\n        const switchStatus = (statusId) => {\r\n            dispatch(editStatus({ id, status: statusId }));\r\n        };\r\n\r\n        return statusObjects.map((button) => {\r\n            return {\r\n                ...button,\r\n                className: classNames(styles.button, button.className, {\r\n                    [styles.active]: status === todoStatuses[button.id]\r\n                }),\r\n                onClick: () => switchStatus(button.id)\r\n            };\r\n        });\r\n    }, [dispatch, id, status]);\r\n\r\n    const openEditForm = () => {\r\n        setIsTodoEditing(true);\r\n    };\r\n\r\n    const closeEditForm = () => {\r\n        setIsTodoEditing(false);\r\n    };\r\n\r\n    const handleDeleteButton = () => {\r\n        dispatch(deleteTodo(id));\r\n    };\r\n\r\n    return (\r\n        <div className={todoClassnames}>\r\n            {isTodoEditing ? (\r\n                <EditForm id={id} name={name} closeEditForm={closeEditForm} />\r\n            ) : (\r\n                <>\r\n                    <div className={styles.top}>\r\n                        <p>{name}</p>\r\n                        <div className={styles.settings}>\r\n                            <button\r\n                                className={classNames(styles.button, styles.edit, styles.active)}\r\n                                onClick={openEditForm}></button>\r\n                            <button\r\n                                className={classNames(styles.button, styles.delete, styles.active)}\r\n                                onClick={handleDeleteButton}></button>\r\n                        </div>\r\n                    </div>\r\n                    <div className={styles.bottom}>\r\n                        <p className={styles.date}>{date}</p>\r\n                        <div className={styles.progress}>\r\n                            {statusButtons.map((button) => (\r\n                                <button\r\n                                    title={button.title}\r\n                                    onClick={button.onClick}\r\n                                    className={button.className}\r\n                                    key={button.id}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TodoItem;\r\n","import classNames from \"classnames\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { editTodo } from \"../../store/todo\";\r\nimport styles from \"./index.module.scss\";\r\n\r\nconst maxInputLength = 15;\r\n\r\nconst EditForm = ({ id, name, closeEditForm }) => {\r\n    const dispatch = useDispatch();\r\n    const [inputValue, setInputValue] = useState(name);\r\n    const [hasError, setHasError] = useState(false);\r\n\r\n    const changeTodoState = () => {\r\n        if (inputValue.length > 0 && inputValue.length < maxInputLength + 1) {\r\n            dispatch(editTodo({ id, name: inputValue }));\r\n            closeEditForm();\r\n        } else {\r\n            setHasError(true);\r\n        }\r\n    };\r\n\r\n    const handleInputChange = ({ target: { value } }) => {\r\n        setHasError(value.length > maxInputLength || value.length === 0 ? true : false);\r\n        setInputValue(value);\r\n    };\r\n\r\n    return (\r\n        <form className={styles.form}>\r\n            <input\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                className={classNames(styles.input, {\r\n                    [styles.hasError]: hasError\r\n                })}\r\n                placeholder=\"Type a todo...\"\r\n            />\r\n            <div className={styles.buttons}>\r\n                <button onClick={changeTodoState} disabled={hasError}>\r\n                    Save\r\n                </button>\r\n                <button onClick={closeEditForm}>Cancel</button>\r\n            </div>\r\n            <p\r\n                className={classNames(styles.error, {\r\n                    [styles.active]: hasError\r\n                })}>\r\n                Length of todo must be less than {`${maxInputLength}`} symbols\r\n            </p>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EditForm;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport todoReducer from \"./todo\";\r\n\r\nexport const store = configureStore({\r\n    reducer: {\r\n        todo: todoReducer\r\n    }\r\n});\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { App } from \"./components\";\r\nimport { store } from \"./store\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <App />\r\n    </Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todo\":\"App_todo__15Jhk\",\"form\":\"App_form__1zafO\",\"input\":\"App_input__3mG0W\",\"hasError\":\"App_hasError__1Y3Wr\",\"error\":\"App_error__3P50b\",\"active\":\"App_active__24tyt\",\"list\":\"App_list__1OIep\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"EditForm_form__26yl6\",\"input\":\"EditForm_input__1bCVQ\",\"hasError\":\"EditForm_hasError__3jGqJ\",\"buttons\":\"EditForm_buttons__2ct1M\",\"error\":\"EditForm_error__2oPtd\",\"active\":\"EditForm_active__1DwbR\"};"],"sourceRoot":""}